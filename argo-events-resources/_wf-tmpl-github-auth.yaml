apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: github-app-auth
  namespace: argo-workflows
spec:
  templates:
    - name: generate-token
      serviceAccountName: argo-workflow
      script:
        image: ogrizovicm/alpine-curl-jq:1.0.0
        command: [sh]
        source: |
          set -o pipefail

          apk add --no-cache bash curl jq openssl

          echo "Reading secrets..."
          APP_ID=$(cat /secrets/app_id)
          INSTALLATION_ID=$(cat /secrets/installation_id)

          client_id=$(cat /secrets/app_id)

          pem="/secrets/private_key" # file path of the private key as second argument

          now=$(date +%s)
          iat=$((${now} - 60)) # Issues 60 seconds in the past
          exp=$((${now} + 600)) # Expires 10 minutes in the future

          b64enc() { openssl base64 | tr -d '=' | tr '/+' '_-' | tr -d '\n'; }

          header_json='{
              "typ":"JWT",
              "alg":"RS256"
          }'
          # Header encode
          header=$( echo -n "${header_json}" | b64enc )

          payload_json="{
              \"iat\":${iat},
              \"exp\":${exp},
              \"iss\":\"${client_id}\"
          }"
          # Payload encode
          payload=$( echo -n "${payload_json}" | b64enc )

          # Signature
          header_payload="${header}"."${payload}"
          signature=$(
              openssl dgst -sha256 -sign "${pem}" \
              <(echo -n "${header_payload}") | b64enc
          )

          # Create JWT
          JWT="${header_payload}"."${signature}"

          echo "Exchanging JWT for installation token..."
          TOKEN=$(curl -s -X POST \
            -H "Authorization: Bearer $JWT" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/app/installations/$INSTALLATION_ID/access_tokens | jq -r .token)

          echo "$TOKEN" > /tmp/access_token
        volumeMounts:
          - name: github-secret
            mountPath: /secrets
            readOnly: true
      outputs:
        parameters:
          - name: access_token
            valueFrom:
              path: /tmp/access_token
            globalName: gh_access_token
      volumes:
        - name: github-secret
          secret:
            secretName: gh-app-myargoworkflows
