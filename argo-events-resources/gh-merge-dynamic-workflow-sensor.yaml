apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: gh-merge-dynamic-workflow-sensor
spec:
  template:
    serviceAccountName: operate-workflow-sa
  dependencies:
    - name: github-hook
      eventSourceName: github
      eventName: gh-hook
      filters:
        data:
          # Type of Github event that triggered the delivery: [pull_request, push, issues, label, ...]
          # https://docs.github.com/en/developers/webhooks-and-events/webhook-events-and-payloads
          - path: headers.X-Github-Event
            type: string
            value:
              - push
          - path: body.ref
            type: string
            value:
              - refs/heads/master
              - refs/heads/main
  triggers:
    - template:
        name: dynamic-merge-workflow-trigger
        argoWorkflow:
          operation: submit
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: merge-
              spec:
                # ttlStrategy:
                #   secondsAfterCompletion: 300 # to cleanup pods after ttl
                workflowTemplateRef:
                  name: "wf-tmpl-"  # this name depends on what repo initiated the webhook
                arguments:
                  parameters:
                    - name: repo_name
                      value: ""
                    - name: branch_name
                      value: ""
          parameters:
            - src:
                dependencyName: github-hook
                dataKey: body.repository.name
              dest: spec.workflowTemplateRef.name
              operation: append
            - src:
                dependencyName: github-hook
                dataKey: body.repository.full_name
              dest: spec.arguments.parameters.0.value
            - src:
                dependencyName: github-hook
                dataTemplate: "{{ .Input.body.repository.name }}-master-{{ .Input.body.head_commit.id | substr 0 7  }}"
              dest: metadata.name
              operation: overwrite
            # - src:
            #     dependencyName: github-hook
            #     dataKey: body.ref
            #   dest: spec.arguments.parameters.1.value

